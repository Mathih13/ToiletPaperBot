const Discord = require('discord.js');
const client = new Discord.Client();
var jsonfile = require('jsonfile');
const file = __dirname + '/output/data.json';
var results;

ToiletPaperBot = (options) => {
  client.login("Mjk0MjM5MjU2MDkwNjQwMzg0.C7SR8g.rxAJDgQP4Ze1085tWA-_z53knzg", output);



  client.on('ready', () => {
    if (options.debug) {
      console.log('Connected to server. Listening.');
    }

    readStorageJSON(file);

    // create an event listener for messages
    client.on('message', message => {

      if (message.content === options.command + 'memetext') {
        if (options.debug) {
          console.log('Recorded command: ' + message.content + ' from ' + message.author.username);
        }

        //TODO: Input random message from list generated by pow!
        //message.channel.sendMessage("ayy lmao");
      }

      // New object with specified information
      var m = new Object();
      m.authorName = message.author.username;
      m.nickName = message.member.nickname;
      m.content = message.content;

      if (m.authorName != 'Tatsumaki' || m.authorName != 'grabmsgs') {
        // Save to file
        results.push(m);
        messagesToJSON();
      }

      if (options.debug) {
        dumpResults()
      }

    });


  });


function dumpResults() {
  console.log(results);
}

function getMessages() {
  return results;
}

function messagesToJSON() {
  jsonfile.writeFile(file, results, function (err) {
    if (err) {
      console.error(err)
    }
  });
}

// These two are an attempt to preserve
// The messages on shutdown
client.on('disconnect', () => {
  messagesToJSON();
})

process.on('SIGTERM', function () {
  messagesToJSON();
});


function readStorageJSON(filePath) {
  jsonfile.readFile(filePath, function(err, obj) {
      // Returns as undefined if file is empty.
      // We dont' want results to be "undefined"
      if (obj != undefined) {
        results = obj;
      } else {
        results = new Array();
      }
    });
}



  // Error handler for login
  function output(error, token) {
          if (error) {
                  console.log(`There was an error logging in: ${error}`);
                  return;
          } else

                  console.log(`Logged in. Token: ${token}`);
  }

}
